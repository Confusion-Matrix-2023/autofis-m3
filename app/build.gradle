plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "com.google.protobuf" version "0.8.17"
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "me.siddheshkothadi.autofism3"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        manifestPlaceholders = [MAPS_API_KEY: "${properties.getProperty('MAPS_API_KEY')}"]
        buildConfigField "String", "OPEN_WEATHER_APP_ID", "\"${properties.getProperty("OPEN_WEATHER_APP_ID")}\""

    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation 'androidx.compose.material3:material3:1.0.0-alpha08'
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation 'androidx.startup:startup-runtime:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // extra compose dependencies
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation("io.coil-kt:coil-compose:2.0.0-rc02")
//    implementation "com.airbnb.android:lottie-compose:5.0.3"
    implementation "androidx.compose.runtime:runtime-livedata:1.2.0-alpha05"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.4.1"

    // accompanist
    implementation "com.google.accompanist:accompanist-navigation-animation:0.24.5-alpha"
    implementation "com.google.accompanist:accompanist-permissions:0.24.3-alpha"

    // splash screen
    implementation "androidx.core:core-splashscreen:1.0.0"

    // Timber for logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // CameraX
    // TODO: remove irrelevant dependencies
    def camerax_version = "1.1.0-beta01"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"
    
    // mlkit object detection
//    implementation 'com.google.mlkit:object-detection-custom:17.0.0'

    // Retrofit for network requests
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    // Room
    def room_version = "2.4.2"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-compiler:2.38.1"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    // Location
    implementation 'com.google.android.gms:play-services-location:19.0.1'

    // WorkManager
    implementation "androidx.work:work-runtime-ktx:2.7.1"
    implementation 'androidx.hilt:hilt-work:1.0.0'

    // Data Store
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation("androidx.datastore:datastore:1.0.0")

    // Map
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'com.google.maps.android:maps-compose:1.2.0'

    // JWT
    implementation 'io.jsonwebtoken:jjwt:0.7.0'

    // tflite
    implementation 'org.tensorflow:tensorflow-lite:2.4.0'
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.4.0'

    implementation  "com.google.protobuf:protobuf-javalite:3.19.4"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.19.4"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}